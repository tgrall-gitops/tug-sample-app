name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  packages: write
  id-token: write
  contents: read

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...



  build-publish-docker-image:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: GitHub Container Registry Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: octodemobo
          password: ${{ secrets.GITHUB_TOKEN }}

      - id : if-main-branch
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo 'BRANCH_NAME=${{ github.ref_name }}' >> GITHUB_ENV

      - id : if-pr-branch
        if: ${{ github.head_ref == 'main' }}
        run: |
          echo 'BRANCH_NAME=${{ github.head_ref }}' >> GITHUB_ENV

      - name: Build and Push Container
        id: container_publish
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            VERSION=1.0.0
            REPOSITORY_NAME=${{ github.repository }}
            revision=${{ github.sha }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:$BRANCH_NAME

  set-context:
    runs-on: ubuntu-latest
    outputs:
      namespace: ${{ steps.step1.outputs.namespace }}
      environment: ${{ steps.step1.outputs.environment }}       
    steps:


      - name: "on main branch"
        if: "github.ref_name=='main'"
        run: |
          echo "KUBE_NAMESPACE=staging" >> $GITHUB_ENV
          echo "KUBE_ENVIRONMENT=staging" >> $GITHUB_ENV

      - name: "on feature branch"
        if: "github.ref_name!='main'"
        run: |
          echo "KUBE_NAMESPACE=github.ref_name" >> $GITHUB_ENV
          echo "KUBE_ENVIRONMENT=development" >> $GITHUB_ENV

  
      - id : step1
        run: |
          echo "ðŸ‘‹  - Setting up context"
          echo "::set-output name=namespace::$KUBE_NAMESPACE"
          echo "::set-output name=environment::$KUBE_ENVIRONMENT"



  deploy-to-kubernetes:
    uses: tgrall-gitops/tug-sample-app/.github/workflows/deploy-to-aks.yml@main
    needs: [ build-publish-docker-image, set-context ]
    with:
      resource-group: tgrall-demo
      cluster-name: tug-kube
      namespace : ${{ needs.set-context.outputs.namespace }}
      environment : ${{ needs.set-context.outputs.environment }}
      branch : ${{ github.ref_name }}
    secrets:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}      



  finish:
    runs-on: ubuntu-latest
    needs: [ deploy-to-kubernetes ]
    steps:

    - run : echo "Deployment complete"

                   